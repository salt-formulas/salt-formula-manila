{%- from "manila/map.jinja" import cfg,scheduler,share,data with context -%}

[DEFAULT]

{%- if cfg.osapi_max_limit is defined %}
osapi_max_limit = {{ cfg.osapi_max_limit }}
{%- endif %}

{%- if cfg.osapi_share_base_url is defined %}
osapi_share_base_URL = {{ cfg.osapi_share_base_url }}
{%- endif %}

{%- if cfg.use_forwarded_for is defined %}
use_forwarded_for = {{ cfg.use_forwarded_for }}
{%- endif %}

{%- if cfg.get('identity', {}).get('engine') == 'keystone' and cfg.identity.region is defined %}
os_region_name = {{ cfg.identity.region }}
{%- endif %}

{%- if scheduler.manager is defined %}
scheduler_manager = {{ scheduler.manager }}
{%- endif %}

{%- if share.manager is defined %}
share_manager = {{ share.manager }}
{%- endif %}

{%- if data.manager is defined %}
data_manager = {{ data.manager }}
{%- endif %}

{%- if cfg.storage_availability_zone is defined %}
storage_availability_zone = {{ cfg.storage_availability_zone }}
{%- endif %}

{%- if cfg.default_share_type is defined %}
default_share_type = {{ cfg.default_share_type }}
{%- endif %}

{%- if cfg.default_share_group_type is defined %}
default_share_group_type = {{ cfg.default_share_group_type }}
{%- endif %}

{%- if cfg.memcached_servers is defined %}
memcached_servers = {{ cfg.memcached_servers }}
{%- endif %}

rootwrap_config = {{ cfg.get('rootwrap_config', '/etc/manila/rootwrap.conf') }}

{%- if cfg.get('identity', {}).get('engine') is defined %}
auth_strategy = {{ cfg.identity.engine }}
{%- endif %}

{%- if cfg.debug is defined %}
debug = {{ cfg.debug }}
{%- endif %}

{%- if cfg.enabled_share_backends is defined %}
{%- set enabled_share_backends = [] %}
{%- for name, backend in cfg.enabled_share_backends.iteritems() %}
{%- if backend.get('enabled', False ) %}
{%- do enabled_share_backends.append(backend.name) %}
{%- endif %}
{%- endfor %}
enabled_share_backends = {{ ','.join(enabled_share_backends) }}
{%- endif %}

{%- if cfg.enabled_share_protocols is defined %}
enabled_share_protocols = {{ cfg.enabled_share_protocols }}
{%- endif %}

{%- if cfg.dhss is defined %}
driver_handles_share_servers = {{ cfg.dhss }}
{%- endif %}

[database]
{% set _database = cfg.database %}
{%- if _database.ssl is defined and cacert_file not in _database.get('ssl', {}).keys() %}{% do _database['ssl'].update({'cacert_file': cfg.cacert_file}) %}{% endif %}
{%- include "manila/files/"+ cfg.version +"/_database.conf" %}


[keystone_authtoken]
{%- set _service_catalog = cfg.get('identity', {}) %}
{%- if _service_catalog.get('auth_type') %}
auth_type = {{ _service_catalog.auth_type }}
{%- include "manila/files/"+ cfg.version +"/_auth_type_"+ _service_catalog.auth_type +".conf" %}
{%- endif %}

[cinder]
{%- set _service_catalog = cfg.get('cinder', cfg.get('identity', {})) %}
{%- if _service_catalog.get('auth_type') %}
auth_type = {{ _service_catalog.auth_type }}
{%- include "manila/files/"+ cfg.version +"/_auth_type_"+ _service_catalog.auth_type +".conf" %}
{%- endif %}

[neutron]
{%- set _service_catalog = cfg.get('neutron', cfg.get('identity', {})) %}
{%- if _service_catalog.get('auth_type') %}
auth_type = {{ _service_catalog.auth_type }}
{%- include "manila/files/"+ cfg.version +"/_auth_type_"+ _service_catalog.auth_type +".conf" %}
{%- endif %}

[nova]
{%- set _service_catalog = cfg.get('nova', cfg.get('identity', {})) %}
{%- if _service_catalog.get('auth_type') %}
auth_type = {{ _service_catalog.auth_type }}
{%- include "manila/files/"+ cfg.version +"/_auth_type_"+ _service_catalog.auth_type +".conf" %}
{%- endif %}

{%- if cfg.enabled_share_backends is defined %}
{%- for name, backend in cfg.enabled_share_backends.iteritems() %}
[{{ backend.name }}]
{%- include "manila/files/"+ cfg.version +"/_backend_general.conf" %}
{%- include "manila/files/"+ cfg.version +"/_backend_"+ backend.type +".conf" %}
{%- endfor %}
{%- endif %}

